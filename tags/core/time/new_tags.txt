SpecTag:fails::Time.new creates a subclass instance if called on a subclass
SpecTag:fails::Time.new creates a time based on given values, interpreted in the local time zone
SpecTag:fails::Time.new respects rare old timezones
SpecTag:fails::Time.new accepts 1 argument (year)
SpecTag:fails::Time.new accepts 2 arguments (year, month)
SpecTag:fails::Time.new accepts 3 arguments (year, month, day)
SpecTag:fails::Time.new accepts 4 arguments (year, month, day, hour)
SpecTag:fails::Time.new accepts 5 arguments (year, month, day, hour, minute)
SpecTag:fails::Time.new accepts nil month, day, hour, minute, and second
SpecTag:fails::Time.new handles a String year
SpecTag:fails::Time.new coerces the year with #to_int
SpecTag:fails::Time.new handles a String month given as a numeral
SpecTag:fails::Time.new handles a String month given as a short month name
SpecTag:fails::Time.new coerces the month with #to_str
SpecTag:fails::Time.new coerces the month with #to_int
SpecTag:fails::Time.new handles a String day
SpecTag:fails::Time.new coerces the day with #to_int
SpecTag:fails::Time.new handles a String hour
SpecTag:fails::Time.new coerces the hour with #to_int
SpecTag:fails::Time.new handles a String minute
SpecTag:fails::Time.new coerces the minute with #to_int
SpecTag:fails::Time.new handles a String second
SpecTag:fails::Time.new coerces the second with #to_int
SpecTag:fails::Time.new interprets all numerals as base 10
SpecTag:fails::Time.new ignores fractional seconds as a Float
SpecTag:fails::Time.new handles fractional seconds as a Float
SpecTag:fails::Time.new handles fractional seconds as a Rational
SpecTag:fails::Time.new accepts various year ranges
SpecTag:fails::Time.new with a utc_offset argument returns a non-UTC time
SpecTag:fails::Time.new with a utc_offset argument returns a Time with a UTC offset of the specified number of Integer seconds
SpecTag:fails::Time.new with a utc_offset argument returns a Time with a UTC offset of the specified number of Rational seconds
SpecTag:fails::Time.new with a utc_offset argument returns a Time with a UTC offset specified as +HH\003AMM
SpecTag:fails::Time.new with a utc_offset argument returns a Time with a UTC offset specified as -HH\003AMM
SpecTag:fails::Time.new with a utc_offset argument returns a local Time if the argument is nil
SpecTag:fails::Time.new with a utc_offset argument raises ArgumentError if the String argument is not of the form (+|-)HH\003AMM
SpecTag:fails::Time.new with a utc_offset argument raises ArgumentError if the argument represents a value less than or equal to -86400 seconds
SpecTag:fails::Time.new with a utc_offset argument raises ArgumentError if the argument represents a value greater than or equal to 86400 seconds
SpecTag:fails::Time.new with a utc_offset argument with an argument that responds to #to_int coerces using #to_int
SpecTag:fails::Time.new with a utc_offset argument with an argument that responds to #to_r coerces using #to_r
SpecTag:fails::Time.new with a utc_offset argument with an argument that responds to #to_str coerces using #to_str
FileTag:fails
SpecTag:fails::Time.new raises an ArgumentError for out of range year
SpecTag:fails::Time.new raises an ArgumentError for out of range month
SpecTag:fails::Time.new raises an ArgumentError for out of range day
SpecTag:fails::Time.new raises an ArgumentError for out of range hour
SpecTag:fails::Time.new raises an ArgumentError for out of range minute
SpecTag:fails::Time.new raises an ArgumentError for out of range second
SpecTag:fails::Time.new raises ArgumentError when given 9 arguments
SpecTag:fails::Time.new raises ArgumentError when given 11 arguments
SpecTag:fails::Time.new returns subclass instances
SpecTag:fails::Time.new creates a time based on the current system time
