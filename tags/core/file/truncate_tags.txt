SpecTag:fails::File.truncate truncates a file
SpecTag:fails::File.truncate truncate a file size to 0
SpecTag:fails::File.truncate truncate a file size to 5
SpecTag:fails::File.truncate truncates to a larger file size than the original file
SpecTag:fails::File.truncate truncates to the same size as the original file
SpecTag:fails::File.truncate raises an Errno\003A\003AENOENT if the file does not exist
SpecTag:fails::File.truncate raises an ArgumentError if not passed two arguments
SpecTag:fails::File.truncate raises an Errno\003A\003AEINVAL if the length argument is not valid
SpecTag:fails::File.truncate raises a TypeError if not passed a String type for the first argument
SpecTag:fails::File.truncate raises a TypeError if not passed an Integer type for the second argument
SpecTag:fails::File.truncate accepts an object that has a #to_path method
SpecTag:fails::File#truncate does not move the file write pointer to the specified byte offset
SpecTag:fails::File#truncate does not move the file read pointer to the specified byte offset
SpecTag:fails::File#truncate truncates a file
SpecTag:fails::File#truncate truncates a file size to 0
SpecTag:fails::File#truncate truncates a file size to 5
SpecTag:fails::File#truncate truncates a file to a larger size than the original file
SpecTag:fails::File#truncate truncates a file to the same size as the original file
SpecTag:fails::File#truncate raises an ArgumentError if not passed one argument
SpecTag:fails::File#truncate raises an Errno\003A\003AEINVAL if the length argument is not valid
SpecTag:fails::File#truncate raises an IOError if file is closed
SpecTag:fails::File#truncate raises an IOError if file is not opened for writing
SpecTag:fails::File#truncate raises a TypeError if not passed an Integer type for the for the argument
