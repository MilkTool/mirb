SpecTag:fails::String#unpack with format 'B' ignores whitespace in the format string
SpecTag:fails::String#unpack with format 'B' calls #to_str to coerce the directives string
SpecTag:fails::String#unpack with format 'B' raises a TypeError when passed nil
SpecTag:fails::String#unpack with format 'B' raises a TypeError when passed an Integer
SpecTag:fails::String#unpack with format 'B' raises an ArgumentError when the format modifier is '_'
SpecTag:fails::String#unpack with format 'B' raises an ArgumentError when the format modifier is '!'
SpecTag:fails::String#unpack with format 'B' decodes one bit from each byte for each format character starting with the most significant bit
SpecTag:fails::String#unpack with format 'B' decodes only the number of bits in the string when passed a count
SpecTag:fails::String#unpack with format 'B' decodes multiple differing bit counts from a single string
SpecTag:fails::String#unpack with format 'B' decodes a directive with a '*' modifier after a directive with a count modifier
SpecTag:fails::String#unpack with format 'B' decodes a directive with a count modifier after a directive with a '*' modifier
SpecTag:fails::String#unpack with format 'B' decodes the number of bits specified by the count modifier
SpecTag:fails::String#unpack with format 'B' decodes all the bits when passed the '*' modifier
SpecTag:fails::String#unpack with format 'B' adds an empty string for each element requested beyond the end of the String
SpecTag:fails::String#unpack with format 'B' ignores NULL bytes between directives
SpecTag:fails::String#unpack with format 'B' ignores spaces between directives
SpecTag:fails::String#unpack with format 'b' ignores whitespace in the format string
SpecTag:fails::String#unpack with format 'b' calls #to_str to coerce the directives string
SpecTag:fails::String#unpack with format 'b' raises a TypeError when passed nil
SpecTag:fails::String#unpack with format 'b' raises a TypeError when passed an Integer
SpecTag:fails::String#unpack with format 'b' raises an ArgumentError when the format modifier is '_'
SpecTag:fails::String#unpack with format 'b' raises an ArgumentError when the format modifier is '!'
SpecTag:fails::String#unpack with format 'b' decodes one bit from each byte for each format character starting with the least significant bit
SpecTag:fails::String#unpack with format 'b' decodes only the number of bits in the string when passed a count
SpecTag:fails::String#unpack with format 'b' decodes multiple differing bit counts from a single string
SpecTag:fails::String#unpack with format 'b' decodes a directive with a '*' modifier after a directive with a count modifier
SpecTag:fails::String#unpack with format 'b' decodes a directive with a count modifier after a directive with a '*' modifier
SpecTag:fails::String#unpack with format 'b' decodes the number of bits specified by the count modifier
SpecTag:fails::String#unpack with format 'b' decodes all the bits when passed the '*' modifier
SpecTag:fails::String#unpack with format 'b' adds an empty string for each element requested beyond the end of the String
SpecTag:fails::String#unpack with format 'b' ignores NULL bytes between directives
SpecTag:fails::String#unpack with format 'b' ignores spaces between directives
