SpecTag:fails::String#unpack with format 'A' ignores whitespace in the format string
SpecTag:fails::String#unpack with format 'A' calls #to_str to coerce the directives string
SpecTag:fails::String#unpack with format 'A' raises a TypeError when passed nil
SpecTag:fails::String#unpack with format 'A' raises a TypeError when passed an Integer
SpecTag:fails::String#unpack with format 'A' raises an ArgumentError when the format modifier is '_'
SpecTag:fails::String#unpack with format 'A' raises an ArgumentError when the format modifier is '!'
SpecTag:fails::String#unpack with format 'A' returns an empty string if the input is empty
SpecTag:fails::String#unpack with format 'A' returns empty strings for repeated formats if the input is empty
SpecTag:fails::String#unpack with format 'A' returns an empty string and does not decode any bytes when the count modifier is zero
SpecTag:fails::String#unpack with format 'A' implicitly has a count of one when no count is specified
SpecTag:fails::String#unpack with format 'A' decodes the number of bytes specified by the count modifier
SpecTag:fails::String#unpack with format 'A' decodes the number of bytes specified by the count modifier including whitespace bytes
SpecTag:fails::String#unpack with format 'A' decodes past whitespace bytes when passed the '*' modifier
SpecTag:fails::String#unpack with format 'A' decodes the number of bytes specified by the count modifier including NULL bytes
SpecTag:fails::String#unpack with format 'A' decodes past NULL bytes when passed the '*' modifier
SpecTag:fails::String#unpack with format 'A' removes trailing space and NULL bytes from the decoded string
SpecTag:fails::String#unpack with format 'A' does not remove whitespace other than space
SpecTag:fails::String#unpack with format 'a' ignores whitespace in the format string
SpecTag:fails::String#unpack with format 'a' calls #to_str to coerce the directives string
SpecTag:fails::String#unpack with format 'a' raises a TypeError when passed nil
SpecTag:fails::String#unpack with format 'a' raises a TypeError when passed an Integer
SpecTag:fails::String#unpack with format 'a' raises an ArgumentError when the format modifier is '_'
SpecTag:fails::String#unpack with format 'a' raises an ArgumentError when the format modifier is '!'
SpecTag:fails::String#unpack with format 'a' returns an empty string if the input is empty
SpecTag:fails::String#unpack with format 'a' returns empty strings for repeated formats if the input is empty
SpecTag:fails::String#unpack with format 'a' returns an empty string and does not decode any bytes when the count modifier is zero
SpecTag:fails::String#unpack with format 'a' implicitly has a count of one when no count is specified
SpecTag:fails::String#unpack with format 'a' decodes the number of bytes specified by the count modifier
SpecTag:fails::String#unpack with format 'a' decodes the number of bytes specified by the count modifier including whitespace bytes
SpecTag:fails::String#unpack with format 'a' decodes past whitespace bytes when passed the '*' modifier
SpecTag:fails::String#unpack with format 'a' decodes the number of bytes specified by the count modifier including NULL bytes
SpecTag:fails::String#unpack with format 'a' decodes past NULL bytes when passed the '*' modifier
SpecTag:fails::String#unpack with format 'a' does not remove trailing whitespace or NULL bytes from the decoded string
