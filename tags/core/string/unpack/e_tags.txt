SpecTag:fails::String#unpack with format 'E' ignores whitespace in the format string
SpecTag:fails::String#unpack with format 'E' calls #to_str to coerce the directives string
SpecTag:fails::String#unpack with format 'E' raises a TypeError when passed nil
SpecTag:fails::String#unpack with format 'E' raises a TypeError when passed an Integer
SpecTag:fails::String#unpack with format 'E' decodes one double for a single format character
SpecTag:fails::String#unpack with format 'E' decodes a negative double
SpecTag:fails::String#unpack with format 'E' decodes two doubles for two format characters
SpecTag:fails::String#unpack with format 'E' decodes the number of doubles requested by the count modifier
SpecTag:fails::String#unpack with format 'E' decodes the remaining doubles when passed the '*' modifier
SpecTag:fails::String#unpack with format 'E' decodes the remaining doubles when passed the '*' modifier after another directive
SpecTag:fails::String#unpack with format 'E' does not decode a double when fewer bytes than a double remain and the '*' modifier is passed
SpecTag:fails::String#unpack with format 'E' adds nil for each element requested beyond the end of the String
SpecTag:fails::String#unpack with format 'E' decodes positive Infinity
SpecTag:fails::String#unpack with format 'E' decodes negative Infinity
SpecTag:fails::String#unpack with format 'E' decodes NaN
SpecTag:fails::String#unpack with format 'E' ignores NULL bytes between directives
SpecTag:fails::String#unpack with format 'E' ignores spaces between directives
SpecTag:fails::String#unpack with format 'e' ignores whitespace in the format string
SpecTag:fails::String#unpack with format 'e' calls #to_str to coerce the directives string
SpecTag:fails::String#unpack with format 'e' raises a TypeError when passed nil
SpecTag:fails::String#unpack with format 'e' raises a TypeError when passed an Integer
SpecTag:fails::String#unpack with format 'e' decodes one float for a single format character
SpecTag:fails::String#unpack with format 'e' decodes a negative float
SpecTag:fails::String#unpack with format 'e' decodes two floats for two format characters
SpecTag:fails::String#unpack with format 'e' decodes the number of floats requested by the count modifier
SpecTag:fails::String#unpack with format 'e' decodes the remaining floats when passed the '*' modifier
SpecTag:fails::String#unpack with format 'e' decodes the remaining floats when passed the '*' modifier after another directive
SpecTag:fails::String#unpack with format 'e' does not decode a float when fewer bytes than a float remain and the '*' modifier is passed
SpecTag:fails::String#unpack with format 'e' adds nil for each element requested beyond the end of the String
SpecTag:fails::String#unpack with format 'e' decodes positive Infinity
SpecTag:fails::String#unpack with format 'e' decodes negative Infinity
SpecTag:fails::String#unpack with format 'e' decodes NaN
SpecTag:fails::String#unpack with format 'e' ignores NULL bytes between directives
SpecTag:fails::String#unpack with format 'e' ignores spaces between directives
