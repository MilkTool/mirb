SpecTag:fails::Array#pack with format 'B' raises a TypeError when passed nil
SpecTag:fails::Array#pack with format 'B' raises a TypeError when passed an Integer
SpecTag:fails::Array#pack with format 'B' ignores whitespace in the format string
SpecTag:fails::Array#pack with format 'B' calls #to_str to coerce the directives string
SpecTag:fails::Array#pack with format 'B' taints the output string if the format string is tainted
SpecTag:fails::Array#pack with format 'B' raises an ArgumentError if there are fewer elements than the format requires
SpecTag:fails::Array#pack with format 'B' encodes no bytes when passed zero as the count modifier
SpecTag:fails::Array#pack with format 'B' raises a TypeError if the object does not respond to #to_str
SpecTag:fails::Array#pack with format 'B' raises a TypeError if #to_str does not return a String
SpecTag:fails::Array#pack with format 'B' calls #to_str to convert an Object to a String
SpecTag:fails::Array#pack with format 'B' encodes one bit for each character starting with the most significant bit
SpecTag:fails::Array#pack with format 'B' implicitly has a count of one when not passed a count modifier
SpecTag:fails::Array#pack with format 'B' implicitly has count equal to the string length when passed the '*' modifier
SpecTag:fails::Array#pack with format 'B' encodes the least significant bit of a character other than 0 or 1
SpecTag:fails::Array#pack with format 'B' returns an ASCII-8BIT string
SpecTag:fails::Array#pack with format 'B' encodes the string as a sequence of bytes
SpecTag:fails::Array#pack with format 'b' raises a TypeError when passed nil
SpecTag:fails::Array#pack with format 'b' raises a TypeError when passed an Integer
SpecTag:fails::Array#pack with format 'b' ignores whitespace in the format string
SpecTag:fails::Array#pack with format 'b' calls #to_str to coerce the directives string
SpecTag:fails::Array#pack with format 'b' taints the output string if the format string is tainted
SpecTag:fails::Array#pack with format 'b' raises an ArgumentError if there are fewer elements than the format requires
SpecTag:fails::Array#pack with format 'b' encodes no bytes when passed zero as the count modifier
SpecTag:fails::Array#pack with format 'b' raises a TypeError if the object does not respond to #to_str
SpecTag:fails::Array#pack with format 'b' raises a TypeError if #to_str does not return a String
SpecTag:fails::Array#pack with format 'b' calls #to_str to convert an Object to a String
SpecTag:fails::Array#pack with format 'b' encodes one bit for each character starting with the least significant bit
SpecTag:fails::Array#pack with format 'b' implicitly has a count of one when not passed a count modifier
SpecTag:fails::Array#pack with format 'b' implicitly has count equal to the string length when passed the '*' modifier
SpecTag:fails::Array#pack with format 'b' encodes the least significant bit of a character other than 0 or 1
SpecTag:fails::Array#pack with format 'b' returns an ASCII-8BIT string
SpecTag:fails::Array#pack with format 'b' encodes the string as a sequence of bytes
