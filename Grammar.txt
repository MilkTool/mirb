Statements <- Sep*, Statement, {Sep+, Statement}*, Sep*

Statement <- Conditional

Conditional <- TernaryIf, {("if" | "unless"), Statement}

Expression <- TernaryIf

TernaryIf <- Arithmetic, {"?", TernaryIf, ":", TernaryIf}

Arithmetic <- Term, {TermOp, Term}

TermOp <- "+"
	| "-"

Term <- Factor, {FactorOp, Factor}*

FactorOp <- "*"
	| "/"

Factor <- Value
	| Assigment
	| Call
	| If
	| Case
	| Unless
	| Class
	| "(", Expressions, ")"

Class <- "class", Identifier, Sep, Statements, "end"

Case <- "case", (When+ {Else} | Else), "end"

When <- "when", Expression, ThenSep

If <- "if", Expression, ThenSep, Statements, {"elsif", Statements}*, {Else}, "end"

Else <- "else", Statements

Unless <- "unless", Expression, ThenSep, Statements, "end"

Call <- Value, {CallChain}*, (CallChain | CallTail)
	| (Message | Namespace), {CallChain}*, {CallTail}

CallChain = CallChained(Message)

CallTail = CallChained(SimpleMessage), {AssignTail}

CallChained(NonTerminal) = ".", NonTerminal
	| "[", Expression, "]"
	| Namespace

Namespace <- "::", Identifier
Message <- SimpleMessage, {Arguments | "(", Arguments, ")"}
SimpleMessage <- Identifier

Arguments <- Expression, {",", Expression}*

Assigment <- Variable, AssignTail
AssignTail <- AssignOp, Expression

AssignOp <- "="
	| "+="
	| "-="
	| "*="
	| "/="

Value <- Number
	| Variable

Variable <- Identifier

ThenSep <- "then"
	| Sep
	| ":"

Sep <- NewLine
	| ";"

Identifier <- Char, {Char | Digit}*

Char <- "_"
	| "a"-"z"
	| "A"-"Z"

Number <- {Digit}+
Digit <- "0"-"9"
NewLine <- "\n" | "\r" | "\r\n"