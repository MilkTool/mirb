SpecTag:fails::Range.compile requires one argument and creates a new regular expression object
SpecTag:fails::Range.compile works by default for subclasses with overridden #initialize
SpecTag:fails::Regexp.compile given a String uses the String argument as an unescaped literal to construct a Regexp object
SpecTag:fails::Regexp.compile given a String raises a RegexpError when passed an incorrect regexp
SpecTag:fails::Regexp.compile given a String does not set Regexp options if only given one argument
SpecTag:fails::Regexp.compile given a String does not set Regexp options if second argument is nil or false
SpecTag:fails::Regexp.compile given a String sets options from second argument if it is one of the Fixnum option constants
SpecTag:fails::Regexp.compile given a String accepts a Fixnum of two or more options ORed together as the second argument
SpecTag:fails::Regexp.compile given a String treats any non-Fixnum, non-nil, non-false second argument as IGNORECASE
SpecTag:fails::Regexp.compile given a String with escaped characters raises a Regexp error if there is a trailing backslash
SpecTag:fails::Regexp.compile given a String with escaped characters accepts a backspace followed by a character
SpecTag:fails::Regexp.compile given a String with escaped characters accepts a one-digit octal value
SpecTag:fails::Regexp.compile given a String with escaped characters accepts a two-digit octal value
SpecTag:fails::Regexp.compile given a String with escaped characters accepts a three-digit octal value
SpecTag:fails::Regexp.compile given a String with escaped characters interprets a digit following a three-digit octal value as a character
SpecTag:fails::Regexp.compile given a String with escaped characters accepts a one-digit hexadecimal value
SpecTag:fails::Regexp.compile given a String with escaped characters accepts a two-digit hexadecimal value
SpecTag:fails::Regexp.compile given a String with escaped characters interprets a digit following a two-digit hexadecimal value as a character
SpecTag:fails::Regexp.compile given a String with escaped characters raises a RegexpError if \\x is not followed by any hexadecimal digits
SpecTag:fails::Regexp.compile given a String with escaped characters accepts an escaped string interpolation
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\n'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\t'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\r'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\f'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\v'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\a'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\e'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\C-\\n'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\C-\\t'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\C-\\r'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\C-\\f'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\C-\\v'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\C-\\a'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\C-\\e'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\c\\n'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\c\\t'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\c\\r'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\c\\f'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\c\\v'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\c\\a'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\c\\e'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\n'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\t'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\r'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\f'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\v'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\a'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\e'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\C-\\n'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\C-\\t'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\C-\\r'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\C-\\f'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\C-\\v'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\C-\\a'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\C-\\e'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\c\\n'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\c\\t'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\c\\r'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\c\\f'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\c\\v'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\c\\a'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts '\\M-\\c\\e'
SpecTag:fails::Regexp.compile given a String with escaped characters accepts multiple consecutive '\\' characters
SpecTag:fails::Regexp.compile given a String with escaped characters accepts characters and escaped octal digits
SpecTag:fails::Regexp.compile given a String with escaped characters accepts escaped octal digits and characters
SpecTag:fails::Regexp.compile given a String with escaped characters accepts characters and escaped hexadecimal digits
SpecTag:fails::Regexp.compile given a String with escaped characters accepts escaped hexadecimal digits and characters
SpecTag:fails::Regexp.compile given a String with escaped characters accepts escaped hexadecimal and octal digits
SpecTag:fails::Regexp.compile given a String with escaped characters accepts \\u{H} for a single Unicode codepoint
SpecTag:fails::Regexp.compile given a String with escaped characters accepts \\u{HH} for a single Unicode codepoint
SpecTag:fails::Regexp.compile given a String with escaped characters accepts \\u{HHH} for a single Unicode codepoint
SpecTag:fails::Regexp.compile given a String with escaped characters accepts \\u{HHHH} for a single Unicode codepoint
SpecTag:fails::Regexp.compile given a String with escaped characters accepts \\u{HHHHH} for a single Unicode codepoint
SpecTag:fails::Regexp.compile given a String with escaped characters accepts \\u{HHHHHH} for a single Unicode codepoint
SpecTag:fails::Regexp.compile given a String with escaped characters accepts characters followed by \\u{HHHH}
SpecTag:fails::Regexp.compile given a String with escaped characters accepts \\u{HHHH} followed by characters
SpecTag:fails::Regexp.compile given a String with escaped characters accepts escaped hexadecimal digits followed by \\u{HHHH}
SpecTag:fails::Regexp.compile given a String with escaped characters accepts escaped octal digits followed by \\u{HHHH}
SpecTag:fails::Regexp.compile given a String with escaped characters accepts a combination of escaped octal and hexadecimal digits and \\u{HHHH}
SpecTag:fails::Regexp.compile given a String with escaped characters accepts \\uHHHH for a single Unicode codepoint
SpecTag:fails::Regexp.compile given a String with escaped characters accepts characters followed by \\uHHHH
SpecTag:fails::Regexp.compile given a String with escaped characters accepts \\uHHHH followed by characters
SpecTag:fails::Regexp.compile given a String with escaped characters accepts escaped hexadecimal digits followed by \\uHHHH
SpecTag:fails::Regexp.compile given a String with escaped characters accepts escaped octal digits followed by \\uHHHH
SpecTag:fails::Regexp.compile given a String with escaped characters accepts a combination of escaped octal and hexadecimal digits and \\uHHHH
SpecTag:fails::Regexp.compile given a String with escaped characters raises a RegexpError if less than four digits are given for \\uHHHH
SpecTag:fails::Regexp.compile given a String with escaped characters raises a RegexpError if the \\u{} escape is empty
SpecTag:fails::Regexp.compile given a String with escaped characters raises a RegexpError if more than six hexadecimal digits are given
SpecTag:fails::Regexp.compile given a String with escaped characters returns a Regexp with US-ASCII encoding if only 7-bit ASCII characters are present regardless of the input String's encoding
SpecTag:fails::Regexp.compile given a String with escaped characters returns a Regexp with source String having US-ASCII encoding if only 7-bit ASCII characters are present regardless of the input String's encoding
SpecTag:fails::Regexp.compile given a String with escaped characters returns a Regexp with US-ASCII encoding if UTF-8 escape sequences using only 7-bit ASCII are present
SpecTag:fails::Regexp.compile given a String with escaped characters returns a Regexp with source String having US-ASCII encoding if UTF-8 escape sequences using only 7-bit ASCII are present
SpecTag:fails::Regexp.compile given a String with escaped characters returns a Regexp with UTF-8 encoding if any UTF-8 escape sequences outside 7-bit ASCII are present
SpecTag:fails::Regexp.compile given a String with escaped characters returns a Regexp with source String having UTF-8 encoding if any UTF-8 escape sequences outside 7-bit ASCII are present
SpecTag:fails::Regexp.compile given a String with escaped characters returns a Regexp with the input String's encoding
SpecTag:fails::Regexp.compile given a String with escaped characters returns a Regexp with source String having the input String's encoding
SpecTag:fails::Regexp.compile given a Regexp uses the argument as a literal to construct a Regexp object
SpecTag:fails::Regexp.compile given a Regexp preserves any options given in the Regexp literal
SpecTag:fails::Regexp.compile given a Regexp does not honour options given as additional arguments
SpecTag:fails::Regexp.compile given a Regexp sets the encoding to UTF-8 if the Regexp literal has the 'u' option
SpecTag:fails::Regexp.compile given a Regexp sets the encoding to EUC-JP if the Regexp literal has the 'e' option
SpecTag:fails::Regexp.compile given a Regexp sets the encoding to Windows-31J if the Regexp literal has the 's' option
SpecTag:fails::Regexp.compile given a Regexp sets the encoding to US-ASCII if the Regexp literal has the 'n' option and the source String is ASCII only
SpecTag:fails::Regexp.compile given a Regexp sets the encoding to source String's encoding if the Regexp literal has the 'n' option and the source String is not ASCII only
