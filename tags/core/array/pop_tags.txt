SpecTag:fails::Array#pop properly handles recursive arrays
SpecTag:fails::Array#pop keeps taint status
SpecTag:fails::Array#pop raises a RuntimeError on a frozen array
SpecTag:fails::Array#pop raises a RuntimeError on an empty frozen array
SpecTag:fails::Array#pop keeps untrusted status
SpecTag:fails::Array#pop passed a number n as an argument removes and returns an array with the last n elements of the array
SpecTag:fails::Array#pop passed a number n as an argument returns an array with the last n elements even if shift was invoked
SpecTag:fails::Array#pop passed a number n as an argument returns a new empty array if there are no more elements
SpecTag:fails::Array#pop passed a number n as an argument returns whole elements if n exceeds size of the array
SpecTag:fails::Array#pop passed a number n as an argument does not return self even when it returns whole elements
SpecTag:fails::Array#pop passed a number n as an argument tries to convert n to an Integer using #to_int
SpecTag:fails::Array#pop passed a number n as an argument raises a TypeError when the passed n can be coerced to Integer
SpecTag:fails::Array#pop passed a number n as an argument does not return subclass instances with Array subclass
SpecTag:fails::Array#pop passed a number n as an argument returns an untainted array even if the array is tainted
SpecTag:fails::Array#pop passed a number n as an argument keeps taint status
SpecTag:fails::Array#pop passed a number n as an argument returns a trusted array even if the array is untrusted
SpecTag:fails::Array#pop passed a number n as an argument raises a RuntimeError on a frozen array
SpecTag:fails::Array#pop passed a number n as an argument keeps untrusted status
