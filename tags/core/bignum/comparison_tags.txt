SpecTag:fails::Bignum#<=> returns 1 when self is Infinity and other is a Bignum
SpecTag:fails::Bignum#<=> returns -1 when self is negative and other is Infinty
SpecTag:fails::Bignum#<=> returns 1 when self is negative and other is -Infinity
SpecTag:fails::Bignum#<=> returns -1 when self is -Infinity and other is negative
SpecTag:fails::Bignum#<=> with a Float when other is negative returns -1 when self is negative and other is larger
SpecTag:fails::Bignum#<=> with a Float when other is negative returns 0 when other is equal
SpecTag:fails::Bignum#<=> with a Float when other is negative returns 1 when self is negative and other is smaller
SpecTag:fails::Bignum#<=> with a Float when other is negative returns 1 when self is positive
SpecTag:fails::Bignum#<=> with a Float when other is positive returns -1 when self is negative
SpecTag:fails::Bignum#<=> with a Float when other is positive returns -1 when self is positive and other is larger
SpecTag:fails::Bignum#<=> with a Float when other is positive returns 0 when other is equal
SpecTag:fails::Bignum#<=> with a Float when other is positive returns 1 when other is smaller
SpecTag:fails::Bignum#<=> with an Object calls #coerce on other
SpecTag:fails::Bignum#<=> with an Object returns nil if #coerce raises an exception
SpecTag:fails::Bignum#<=> with an Object raises an exception if #coerce raises a non-StandardError exception
SpecTag:fails::Bignum#<=> with an Object returns nil if #coerce does not return an Array
SpecTag:fails::Bignum#<=> with an Object returns -1 if the coerced value is larger
SpecTag:fails::Bignum#<=> with an Object returns 0 if the coerced value is equal
SpecTag:fails::Bignum#<=> with an Object returns 1 if the coerced value is smaller
