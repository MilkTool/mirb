SpecTag:fails::IO.new creates an IO instance from a Fixnum argument
SpecTag:fails::IO.new calls #to_int on an object to convert to a Fixnum
SpecTag:fails::IO.new accepts a \003Amode option
SpecTag:fails::IO.new accepts a mode argument set to nil with a valid \003Amode option
SpecTag:fails::IO.new accepts a mode argument with a \003Amode option set to nil
SpecTag:fails::IO.new raises an error if passed modes two ways
SpecTag:fails::IO.new uses the external encoding specified in the mode argument
SpecTag:fails::IO.new uses the external and the internal encoding specified in the mode argument
SpecTag:fails::IO.new uses the external encoding specified via the \003Aexternal_encoding option
SpecTag:fails::IO.new uses the internal encoding specified via the \003Ainternal_encoding option
SpecTag:fails::IO.new uses the colon-separated encodings specified via the \003Aencoding option
SpecTag:fails::IO.new ingores the \003Aencoding option when the \003Aexternal_encoding option is present
SpecTag:fails::IO.new ingores the \003Aencoding option when the \003Ainternal_encoding option is present
SpecTag:fails::IO.new uses the encoding specified via the \003Amode option hash
SpecTag:fails::IO.new ignores the \003Ainternal_encoding option when the same as the external encoding
SpecTag:fails::IO.new sets internal encoding to nil when passed '-'
SpecTag:fails::IO.new raises an error if passed encodings two ways
SpecTag:fails::IO.new sets binmode from mode string
SpecTag:fails::IO.new does not set binmode without being asked
SpecTag:fails::IO.new sets binmode from \003Abinmode option
SpecTag:fails::IO.new does not set binmode from false \003Abinmode
SpecTag:fails::IO.new raises an error if passed binary/text mode two ways
SpecTag:fails::IO.new raises an error when trying to set both binmode and textmode
SpecTag:fails::IO.new sets external encoding to binary with binmode in mode string
SpecTag:fails::IO.new sets external encoding to binary with \003Abinmode option
SpecTag:fails::IO.new does not use binary encoding when mode encoding is specified
SpecTag:fails::IO.new does not use binary encoding when \003Aencoding option is specified
SpecTag:fails::IO.new does not use binary encoding when \003Aexternal_encoding option is specified
SpecTag:fails::IO.new does not use binary encoding when \003Ainternal_encoding option is specified
SpecTag:fails::IO.new accepts nil options
SpecTag:fails::IO.new coerces mode with #to_str
SpecTag:fails::IO.new coerces mode with #to_int
SpecTag:fails::IO.new coerces mode with #to_str when passed in options
SpecTag:fails::IO.new coerces mode with #to_int when passed in options
SpecTag:fails::IO.new coerces \003Aencoding option with #to_str
SpecTag:fails::IO.new coerces \003Aexternal_encoding option with #to_str
SpecTag:fails::IO.new coerces \003Ainternal_encoding option with #to_str
SpecTag:fails::IO.new coerces options as third argument with #to_hash
SpecTag:fails::IO.new coerces options as second argument with #to_hash
SpecTag:fails::IO.new raises ArgumentError if not passed a hash or nil for options
SpecTag:fails::IO.new raises TypeError if passed a hash for mode and nil for options
SpecTag:fails::IO.new raises an Errno\003A\003AEBADF if the file descriptor is not valid
SpecTag:fails::IO.new raises an IOError if passed a closed stream
SpecTag:fails::IO.new raises an Errno\003A\003AEINVAL if the new mode is not compatible with the descriptor's current mode
SpecTag:fails::IO.new raises ArgumentError if passed an empty mode string
