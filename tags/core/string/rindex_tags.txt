SpecTag:fails::String#rindex with object raises a TypeError if obj isn't a String, Fixnum or Regexp
SpecTag:fails::String#rindex with object doesn't try to convert obj to an integer via to_int
SpecTag:fails::String#rindex with object tries to convert obj to a string via to_str
SpecTag:fails::String#rindex with String behaves the same as String#rindex(char) for one-character strings
SpecTag:fails::String#rindex with String behaves the same as String#rindex(?char) for one-character strings
SpecTag:fails::String#rindex with String returns the index of the last occurrence of the given substring
SpecTag:fails::String#rindex with String doesn't set $~
SpecTag:fails::String#rindex with String ignores string subclasses
SpecTag:fails::String#rindex with String starts the search at the given offset
SpecTag:fails::String#rindex with String starts the search at offset + self.length if offset is negative
SpecTag:fails::String#rindex with String returns nil if the substring isn't found
SpecTag:fails::String#rindex with String tries to convert start_offset to an integer via to_int
SpecTag:fails::String#rindex with String raises a TypeError when given offset is nil
SpecTag:fails::String#rindex with Regexp behaves the same as String#rindex(string) for escaped string regexps
SpecTag:fails::String#rindex with Regexp returns the index of the first match from the end of string of regexp
SpecTag:fails::String#rindex with Regexp sets $~ to MatchData of match and nil when there's none
SpecTag:fails::String#rindex with Regexp starts the search at the given offset
SpecTag:fails::String#rindex with Regexp starts the search at offset + self.length if offset is negative
SpecTag:fails::String#rindex with Regexp returns nil if the substring isn't found
SpecTag:fails::String#rindex with Regexp supports \\G which matches at the given start offset
SpecTag:fails::String#rindex with Regexp tries to convert start_offset to an integer via to_int
SpecTag:fails::String#rindex with Regexp raises a TypeError when given offset is nil
